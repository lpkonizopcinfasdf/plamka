loopgrab = true
task.spawn(function()
    while true do 
        task.wait(0)
        coroutine.wrap(function()
                              local spr = game.Players.LocalPlayer.Character:FindFirstChild("Head")
                              if (perm ~= true or workspace.Terrain._Game.Admin.Pads:FindFirstChild(game.Players.LocalPlayer.Name.."'s admin") ~= nil) and firetouchinterest then 
                              else
                                    pcall(function()
                                              local pad = workspace.Terrain._Game.Admin.Pads:FindFirstChild("Touch to get admin")
                                              local a = pad.Head
                                              firetouchinterest(a, spr, 1)
                                              firetouchinterest(a, spr, 0)
                                              firetouchinterest(a, spr, 1)
                                              task.wait()
                                              firetouchinterest(a, spr, 0)
                                    end)
                              end
        end)()
    end
end) -- you need admin ye?


wait(0.25)
--vg crash
game.Players:Chat("gear all 0000000000000000000000000094794847")
local Backpack = game.Players.LocalPlayer:FindFirstChildOfClass("Backpack")
game.Players.LocalPlayer.Backpack:WaitForChild("VampireVanquisher")
for _, v in ipairs(Backpack:GetChildren()) do
    v.Parent = game.Players.LocalPlayer.Character
    v:Activate()
end
wait(.15)
for i = 1,100 do
    game.Players:Chat("unsize                                                                             me me me")
end

wait(0.45)
-- silcrash
for i = 1,52 do
            chat("dog all all all                                                                           ")
        end
        for i = 1,51 do
            chat("clone all all all                                                                           ")
        end

        
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   		end
	end
end
wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end

wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end
wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end

wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end
wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end

wait(0.1)
local HttpService, TPService = game:GetService("HttpService"), game:GetService("TeleportService")
local ServersToTP = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for _, s in pairs(ServersToTP.data) do
   if s.playing ~= s.maxPlayers then
       TPService:TeleportToPlaceInstance(game.PlaceId, s.id)
   	end
end
wait(1)
-- fuckcrash
for i = 0,5 do
        for i = 0,3 do 
            game.Players:Chat("size all .3") 
        end
        for i = 0,2 do 
            game.Players:Chat("freeze all all all") 
        end
        game.Players:Chat("size all 9.99")
        game.Players:Chat("dog all all all")
        game.Players:Chat("size all 10")
        for i = 0,4 do 
                game.Players:Chat("clone all all all") 
        end
        game.Players:Chat("unsize all all all")
end
